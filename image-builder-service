#!/bin/bash
#
# Run an INAETICS Image builder service
#
# (C) 2014 INAETICS, <www.inaetics.org> - Apache License v2.

#
# Config
#
VERBOSE_LOG=false
UPDATE_INTERVAL=300
HOME_DIR=$(dirname $0)

declare -A DOCKER_IMAGES
DOCKER_IMAGES["inaetics/node-controller"]="https://github.com/INAETICS/node-controller-image.git"
DOCKER_IMAGES["inaetics/node-agent"]="https://github.com/INAETICS/node-agent-service.git"
DOCKER_IMAGES["inaetics/node-provisioning"]="https://github.com/INAETICS/node-provisioning-service.git"
DOCKER_IMAGES["inaetics/celix-node-agent"]="https://github.com/INAETICS/celix-node-agent-service.git"

#
# Functions
#

verbose () {
  if $VERBOSE_LOG; then $@; else $@ &> /dev/null; fi
  return $?
}

verbose_err () {
  if $VERBOSE_LOG; then $@; else $@ 1> /dev/null; fi
  return $?
}

verbose_out () {
  if $VERBOSE_LOG; then $@; else $@ 2> /dev/null; fi
  return $?
}

update_image () {
  echo "Updating image: $1 => $2"
  local imageid=$(verbose_out $HOME_DIR/docker-image-builder locate $1 $2)
  if [ $? -ne 0 ]; then
    echo "Image update failed!" 1>&2
    return 1
  fi
  echo "Image updated (${imageid:0:12})"
  return 0
}

clean_up () {
    exit 0
}

#
# Main
#
trap clean_up SIGHUP SIGINT SIGTERM

for var in "$@"; do
  if [ "$var" == "-v" ]; then
    VERBOSE_LOG=true
  fi
done

echo "-----------------------------------------------------------------------"
echo "Image builder service"
echo "-----------------------------------------------------------------------"
echo -e "HOME\t: $HOME_DIR"
echo -e "VERBOSE\t: $VERBOSE_LOG (use -v option to enable)"
echo -e "UPDATE\t: $UPDATE_INTERVAL (seconds)"
echo "-----------------------------------------------------------------------"

while true; do
  for image in ${!DOCKER_IMAGES[@]}; do
    update_image $image ${DOCKER_IMAGES[$image]}
  done
  echo "Will check for updates in $UPDATE_INTERVAL seconds..."
  sleep $UPDATE_INTERVAL &
  wait $!
done

